{"version":3,"sources":["assets/canada-flag.svg","components/ReviewForm/ReviewForm.tsx","components/RadioButtons/RadioButtons.tsx","components/StartSurveyForm/StartSurveyFrom.tsx","components/Question/Question.tsx","components/SurveyForm/SurveyForm.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","fill","d","_ref4","_ref","svgRef","title","props","viewBox","ref","undefined","ForwardRef","forwardRef","ReviewForm","useState","showActions","setShowActions","className","quesitons","map","question","id","options","answers","onClick","onBack","onSubmit","RadioButtons","value","onChange","data-toggle","option","type","checked","label","StartSurveyForm","useForm","errors","control","handleSubmit","language","setLanguage","setType","as","name","rules","required","defaultValue","Question","error","index","SurveyForm","View","questions","initialValues","selectedOptions","setSelectedOptions","handleOptionSelect","useCallback","questionId","prev","App","setAnswers","Start","view","setView","submitted","setSubmitted","data","Questions","Review","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.00000b46.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Flag of Canada\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#f00\",\n  d: \"m0 0h2400l99 99h4602l99-99h2400v4800h-2400l-99-99h-4602l-99 99H0z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#fff\",\n  d: \"m2400 0h4800v4800h-4800zm2490 4430-45-863a95 95 0 0 1 111-98l859 151-116-320a65 65 0 0 1 20-73l941-762-212-99a65 65 0 0 1-34-79l186-572-542 115a65 65 0 0 1-73-38l-105-247-423 454a65 65 0 0 1-111-57l204-1052-327 189a65 65 0 0 1-91-27l-332-652-332 652a65 65 0 0 1-91 27l-327-189 204 1052a65 65 0 0 1-111 57l-423-454-105 247a65 65 0 0 1-73 38l-542-115 186 572a65 65 0 0 1-34 79l-212 99 941 762a65 65 0 0 1 20 73l-116 320 859-151a95 95 0 0 1 111 98l-45 863z\"\n});\n\nvar SvgCanadaFlag = function SvgCanadaFlag(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 9600 4800\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCanadaFlag, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/canada-flag.4441af0d.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\nimport { IQuestion } from \"../../types\";\n\ninterface Props {\n  quesitons: IQuestion[];\n  answers: Record<number, number>;\n  onBack?(): void;\n  onSubmit?(): void;\n}\n\nfunction ReviewForm(props: Props) {\n  const [showActions, setShowActions] = useState(true);\n  return (\n    <div className=\"container\">\n      <div className=\"panel panel-default\">\n        <div className=\"panel-heading\">Review your submission</div>\n        <div className=\"panel-body\">\n          {props.quesitons.map((question) => (\n            <div key={question.id}>\n              <h5>{question.question}</h5>\n              <div>{question.options[props.answers[question.id]]}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {showActions && (\n        <div className=\"row mt-2\">\n          <div className=\"col-xs-6\">\n            <button className=\"btn btn-secondary\" onClick={props.onBack}>\n              Back\n            </button>\n          </div>\n          <div className=\"col-xs-6 text-right\">\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                setShowActions(false);\n                if (props.onSubmit) {\n                  props.onSubmit();\n                }\n              }}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ReviewForm;\n","import React from \"react\";\n\ninterface Option {\n  value: any;\n  label: string;\n}\n\ninterface Props {\n  options: Option[];\n  value: any;\n  onChange(value: any): void;\n}\n\nfunction RadioButtons({ options, value, onChange }: Props) {\n  return (\n    <div className=\"btn-group\" data-toggle=\"buttons\">\n      {options.map((option) => (\n        <label\n          key={option.value}\n          className={`btn btn-primary ${\n            value === option.value ? \"active\" : \"\"\n          }`}\n        >\n          <input\n            type=\"radio\"\n            onChange={() => onChange(option.value)}\n            checked={value === option.value}\n          />{\" \"}\n          {option.label}\n        </label>\n      ))}\n    </div>\n  );\n}\n\nexport default RadioButtons;\n","import React, { useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport RadioButtons from \"../RadioButtons/RadioButtons\";\n\ninterface FormValues {\n  language: \"en\" | \"fr\";\n  type: number;\n}\n\ninterface Props {\n  onSubmit(data: FormValues): void;\n}\n\ninterface Errors {\n  language?: string;\n  type?: string;\n}\n\nfunction StartSurveyForm({ onSubmit }: Props) {\n  const { errors, control, handleSubmit } = useForm<FormValues>();\n  const [language, setLanguage] = useState<\"en\" | \"fr\">();\n  const [type, setType] = useState<number>();\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-group\">\n          <label>Choose your preferred language</label>\n\n          <div>\n            <Controller\n              as={RadioButtons}\n              name=\"language\"\n              control={control}\n              rules={{ required: true }}\n              value={language}\n              onChange={setLanguage}\n              defaultValue={null}\n              options={[\n                { label: \"English\", value: \"en\" },\n                { label: \"French\", value: \"fr\" },\n              ]}\n            />\n\n            {errors.language && (\n              <div>\n                <small className=\"text-danger\">Language is required</small>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label>Type of user</label>\n\n          <div>\n            <Controller\n              as={RadioButtons}\n              name=\"type\"\n              control={control}\n              rules={{ required: true }}\n              defaultValue={null}\n              options={[\n                { label: \"Recreational\", value: 0 },\n                { label: \"Commercial\", value: 1 },\n              ]}\n              value={type}\n              onChange={setType}\n            />\n            {errors.type && (\n              <div>\n                <small className=\"text-danger\">Type is required</small>\n              </div>\n            )}{\" \"}\n          </div>\n        </div>\n        <button className=\"btn btn-call-to-action\">Start</button>\n      </form>\n    </div>\n  );\n}\n\nexport default StartSurveyForm;\n","import React from \"react\";\n\nimport \"./Question.scss\";\n\ninterface Props {\n  question: string;\n  id: number;\n  options: string[];\n  value?: number;\n  onChange(index: number): void;\n  error?: boolean;\n}\n\nfunction Question({ question, options, id, value, onChange, error }: Props) {\n  return (\n    <div className=\"QuestionContainer\">\n      <p>\n        {id}. {question}\n      </p>\n      {error && (\n        <small className=\"text-danger\">This is a required question</small>\n      )}\n      <ul>\n        {options.map((option, index) => (\n          <li key={index}>\n            <label>\n              <input\n                onChange={() => onChange(index)}\n                type=\"radio\"\n                name={`question-${id}`}\n                checked={value === index}\n              />{\" \"}\n              <span>{option}</span>\n            </label>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Question;\n","import React, { useCallback, useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { IQuestion } from \"../../types\";\nimport Question from \"../Question/Question\";\n\ninterface Props {\n  questions: IQuestion[];\n  initialValues?: Record<number, number>;\n  onSubmit(answers: Record<number, number>): void;\n}\n\nfunction SurveyForm({ questions, initialValues, onSubmit }: Props) {\n  const [selectedOptions, setSelectedOptions] = useState<\n    Record<number, number | undefined>\n  >({});\n\n  const handleOptionSelect = useCallback(\n    (questionId: number, index: number) => {\n      setSelectedOptions((prev) => ({\n        ...prev,\n        [questionId]: index,\n      }));\n    },\n    []\n  );\n\n  const { control, handleSubmit, errors } = useForm();\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {questions.map((question) => (\n          <Controller\n            key={question.question}\n            as={Question}\n            name={`${question.id}`}\n            defaultValue={initialValues ? initialValues[question.id] : null}\n            control={control}\n            onChange={(index: number) => handleOptionSelect(question.id, index)}\n            value={selectedOptions[question.id]}\n            rules={{ required: true }}\n            error={errors[question.id]}\n            {...question}\n          />\n        ))}\n        <button className=\"btn btn-primary\">Next</button>\n      </form>\n    </div>\n  );\n}\n\nexport default SurveyForm;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { ReactComponent as Flag } from \"./assets/canada-flag.svg\";\nimport ReviewForm from \"./components/ReviewForm/ReviewForm\";\nimport StartSurveyForm from \"./components/StartSurveyForm/StartSurveyFrom\";\nimport SurveyForm from \"./components/SurveyForm/SurveyForm\";\nimport { IQuestion } from \"./types\";\n\nconst questions: IQuestion[] = [\n  {\n    id: 1,\n    question: \"Are you ok?\",\n    options: [\"Yes\", \"No\", \"Goh bokhor\"],\n  },\n  {\n    id: 2,\n    question: \"Annie is okay be nazaret be khatere COVID?\",\n    options: [\"Yes\", \"No\", \"Goh bokhor\"],\n  },\n];\n\nenum View {\n  Start = 0,\n  Questions = 1,\n  Review = 2,\n}\n\nfunction App() {\n  // const [language, setLanguage] = useState<\"en\" | \"fr\">();\n  // const [type, setType] = useState<number>();\n  const [answers, setAnswers] = useState<Record<number, number>>();\n  const [view, setView] = useState(View.Start);\n  const [submitted, setSubmitted] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"container\">\n          <div className=\"brand\">\n            <Flag className=\"mr-2\" />\n            <h2>Sample Survey</h2>\n          </div>\n        </div>\n        <div className=\"gcweb-v2 gcweb-menu wb-init gcweb-menu-inited mb-2\"></div>\n      </header>\n      {submitted && (\n        <div className=\"container\">\n          <div>\n            <div className=\"alert alert-success\">\n              Form sucessfully submitted\n            </div>\n          </div>\n        </div>\n      )}\n\n      {view === View.Start && (\n        <StartSurveyForm\n          onSubmit={(data) => {\n            // setLanguage(data.language);\n            // setType(data.type);\n            setView(View.Questions);\n          }}\n        />\n      )}\n\n      {view === View.Questions && (\n        <SurveyForm\n          questions={questions}\n          onSubmit={(answers) => {\n            setAnswers(answers);\n            setView(View.Review);\n          }}\n          initialValues={answers}\n        />\n      )}\n\n      {view === View.Review && answers && (\n        <ReviewForm\n          quesitons={questions}\n          answers={answers}\n          onBack={() => {\n            setView(View.Questions);\n          }}\n          onSubmit={() => {\n            setSubmitted(true);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}